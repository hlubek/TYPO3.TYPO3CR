== NodeTypeManager ==

NodeTypeTemplate 
createNodeTypeTemplate() 
Returns an empty 
NodeTypeTemplate which can then be used to define 
a node type and passed to 
NodeTypeManager.registerNodeType. 
Throws an 
UnsupportedRepositoryOperationException if this 
implementation does not support node type registration. 
Throws a 
RepositoryException if another error occurs. 
NodeTypeTemplate 
createNodeTypeTemplate(NodeType nodeType) 
Returns a 
NodeTypeTemplate holding the definition of the specified 
node type. This template can then be altered and passed to 
NodeTypeManager.registerNodeType. 
Throws an 
UnsupportedRepositoryOperationException if this 
implementation does not support node type registration. 
Throws a 
RepositoryException if another error occurs. 
NodeDefinitionTemplate 
createNodeDefinitionTemplate() 
Returns an empty 
NodeDefinitionTemplate which can then be used to create a child node definition and attached to a 
NodeTypeTemplate. 
Throws an 
UnsupportedRepositoryOperationException if this 
implementation does not support node type registration. 
Throws a 
RepositoryException if another error occurs. 
PropertyDefinitionTemplate 
createPropertyDefinitionTemplate() 
Returns an empty 
PropertyDefinitionTemplate which can then be 
used to create a property definition and attached to a 
NodeTypeTemplate. 
Throws an 
UnsupportedRepositoryOperationException if this 
implementation does not support node type registration. 
Throws a 
RepositoryException if another error occurs. 
NodeType 
registerNodeType(NodeTypeDefinition ntd, 
                 boolean allowUpdate) 
Registers a new node type or updates an existing node type using the 
specified definition and returns the resulting 
NodeType object. 
Typically, the object passed to this method will be a 
NodeTypeTemplate 
(a subclass of 
NodeTypeDefinition) acquired from 
NodeTypeManager.createNodeTypeTemplate and then filled-in with 
definition information. 
Throws an 
InvalidNodeTypeDefinitionException if the 
NodeTypeDefinition is invalid. 
Throws a 
NodeTypeExistsException if allowUpdate is false and the 
NodeTypeDefinition specifies a node type name that is already 
registered. 
Throws an 
UnsupportedRepositoryOperationException if this 
implementation does not support node type registration. 
Throws a 
RepositoryException if another error occurs. 
NodeTypeIterator 
registerNodeTypes(Collection definitions, 
                  boolean allowUpdate) 
Registers or updates the specified 
Collection of NodeTypeDefinition 
objects. This method is used to register or update a set of node types 
with mutual dependencies. Returns an iterator over the resulting 
NodeType objects. 
The effect of the method is “all or nothing”; if an error occurs, no node 
types are registered or updated. 
Throws an 
InvalidNodeTypeDefinitionException if a 
NodeTypeDefinition within the Collection is invalid or if the 
Collection contains an object of a type other than 
NodeTypeDefinition. 
Throws a 
NodeTypeExistsException if allowUpdate is false and a 
NodeTypeDefinition within the Collection specifies a node type 
name that is already registered. 
Throws an 
UnsupportedRepositoryOperationException if this 
implementation does not support node type registration. 
Throws a 
RepositoryException if another error occurs. 
void 
unregisterNodeType(String name) 
Unregisters the specified node type. 
Throws a 
NoSuchNodeTypeException if no registered node type exists 
with the specified name. 
Throws an 
UnsupportedRepositoryOperationException if this 
implementation does not support node type registration. 
Throws a 
RepositoryException if another error occurs. 
void 
unregisterNodeTypes(String[] names) 
Unregisters the specified set of node types. Used to unregister a set of 
node types with mutual dependencies. 
Throws a 
NoSuchNodeTypeException if one of the names listed is not a 
registered node type. 
Throws an 
UnsupportedRepositoryOperationException if this 
implementation does not support node type registration. 
Throws a 
RepositoryException if another error occurs. 
