== NodeTypeDefinition ==

=== String[] getDeclaredSupertypeNames() ===
Returns the names of the supertypes actually declared in this node 
type. 
In implementations that support node type registration (see 6.6 Node 
Type Registration), if this NodeTypeDefinition object is actually a 
newly-created empty NodeTypeTemplate, then this method will return 
an array containing a single string indicating the node type nt:base. 

=== boolean isMixin() ===
Returns true if this is a mixin type; returns false if it is primary. 
In implementations that support node type registration (see 6.6 Node 
Type Registration), if this NodeTypeDefinition object is actually a 
newly-created empty NodeTypeTemplate, then this method will return 
false. 

=== boolean hasOrderableChildNodes() ===
Returns true if nodes of this type must support orderable child nodes; 
returns false otherwise. If a node type returns true on a call to this 
method, then all nodes of that node type must support the method 
Node.orderBefore. If a node type returns false on a call to this 
method, then nodes of that node type may support Node.orderBefore. 
Only the primary node type of a node controls that node's status in this 
regard. This setting on a mixin node type will not have any effect on 
the node. See 5.1.11 Ordering Child Nodes. 
In implementations that support node type registration (see 6.6 Node 
Type Registration), if this NodeTypeDefinition object is actually a 
newly-created empty NodeTypeTemplate, then this method will return 
false. 

=== String getPrimaryItemName() ===
Returns the name of the primary item (one of the child items of the 
nodes of this node type). If this node has no primary item, then this 
method returns null. This indicator is used by the method 
Node.getPrimaryItem(). See 4.2.3 Node Read Methods. 
In implementations that support node type registration (see 6.6 Node 
Type Registration), if this NodeTypeDefinition object is actually a 
newly-created empty NodeTypeTemplate, then this method will return 
null. 

=== PropertyDefinition[] getDeclaredPropertyDefinitions() ===
Returns an array containing the property definitions actually declared in 
this node type. 
In implementations that support node type registration (see 6.6 Node 
Type Registration), if this NodeTypeDefinition object is actually a 
newly-created empty NodeTypeTemplate, then this method will return 
null. 

=== NodeDefinition[] getDeclaredChildNodeDefinitions() ===
Returns an array containing the child node definitions actually declared 
in this node type. 
In implementations that support node type registration (see 6.6 Node 
Type Registration), if this NodeTypeDefinition object is actually a 
newly-created empty NodeTypeTemplate, then this method will return 
null.
